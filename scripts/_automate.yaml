---
dqn-baseline:
  legacy: true
  num_seeds: 5
  timesteps: 10000000
  env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
  history_len: [1, 4]
  return_type: [nstep-3]

drqn-baseline:
  legacy: true
  recurrent: true
  num_seeds: 5
  timesteps: 10000000
  env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
  history_len: [4]
  return_type: [nstep-3]

exp-0:
  num_seeds: 5
  timesteps: 2000000
  env: [pong]
  history_len: [4]
  return_type: [nstep-3]
  oversample: [1.0, 1.5, 2.0, 2.5, 3.0]
  priority: [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]

exp-1:
  num_seeds: 5
  timesteps: 10000000
  env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
  history_len: [4]
  return_type:
    - pengs-0.25
    - pengs-0.5
    - pengs-0.75
    - pengs-1.0
    - watkins-0.25
    - watkins-0.5
    - watkins-0.75
    - watkins-1.0
  oversample: [1.0]
  priority: [0.0]

exp-2a:
  num_seeds: 5
  timesteps: 10000000
  env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
  history_len: [1, 4]
  return_type:
    - pengs-dynamic
  oversample: [2.5]
  priority: [0.4]

exp-2b:
  recurrent: true
  num_seeds: 5
  timesteps: 10000000
  env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
  history_len: [4]
  return_type:
    - pengs-dynamic
  oversample: [2.5]
  priority: [0.4]

# exp-3a:
#   recurrent: true
#   num_seeds: 5
#   timesteps: 10000000
#   env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
#   history_len: [1]
#   return_type:
#     - pengs-or-watkins TODO
#   oversample: [1.0]
#   priority: [0.0]

# exp-3b:
#   recurrent: true
#   num_seeds: 5
#   timesteps: 10000000
#   env: [beam_rider, breakout, pong, qbert, seaquest, space_invaders]
#   history_len: [4]
#   return_type:
#     - pengs-or-watkins TODO
#   oversample: [1.0]
#   priority: [0.0]
...
